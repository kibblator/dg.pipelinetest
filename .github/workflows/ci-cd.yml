name: Main Pipeline

on:
  workflow_dispatch:
    inputs:
      exit_code:
        required: true
        default: "0"
        description: The exit code when running the pipeline

jobs:
  plan:
    runs-on: ubuntu-latest
    name: Plan TF
    outputs:
      exit_code: ${{ steps.plan.outputs.tfplan_exit }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Terraform Plan
        id: plan
        run: |
          echo "Planning things"
          set +e
          ./mock-terraform.sh ${{ github.event.inputs.exit_code }}
          echo "tfplan_exit=$?" >> "$GITHUB_OUTPUT"
          echo "tfplan_exit=$?" >> "$GITHUB_ENV"
        continue-on-error: true

      - name: Check status code
        run: |
          echo "Checking exit code"
          if [ "$tfplan_exit" -ne "0" ] && [ "$tfplan_exit" -ne "2" ]; then
            echo "exiting with status $tfplan_exit"

            exit "$tfplan_exit"
          fi
          echo "Continuing with pipeline"

  deploy:
    environment:
      name: staging
    runs-on: ubuntu-latest
    needs: plan
    name: Deploy TF
    if: needs.plan.outputs.exit_code == '2'
    steps:
      - name: Deploy TF
        id: deploy_tf
        run: |
          echo "Deploying things"

  other:
    runs-on: ubuntu-latest
    needs: [plan, deploy]
    name: Do other things
    if: always() && needs.plan.result == 'success' && (needs.deploy.result == 'success' || needs.deploy.result == 'skipped')
    steps:
      - name: Deploy TF
        env:
          OUTPUT1: ${{needs.plan.outputs.exit_code}}
        id: deploy_tf
        run: |
          echo "Output from previous job was: $OUTPUT1" 
          echo "Deploying things"
